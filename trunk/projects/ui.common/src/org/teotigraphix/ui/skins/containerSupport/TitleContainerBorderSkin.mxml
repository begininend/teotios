<?xml version="1.0" encoding="utf-8"?>
<!--
// Copyright 2010 Michael Schmalle - Teoti Graphix, LLC
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Michael Schmalle, Principal Architect
// mschmalle at teotigraphix dot com
-->
<!--- 
* desc
* 
* @author Michael Schmalle
* @copyright Teoti Graphix, LLC
* @productversion 1.0
-->
<tg:ComponentBorderSkinBase 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:tg="org.teotigraphix.ui.skins.componentSupport.*"
	minWidth="0" minHeight="0" mouseEnabled="false" >
	
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("org.teotigraphix.ui.components.ComponentBorder")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			
			import org.teotigraphix.ui.components.containerSupport.TitleContainerBase;
			import org.teotigraphix.ui.core.BarPlacement;
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, 
														  unscaledHeight:Number):void
			{
				var cr:Number = getStyle("cornerRadius");
				
				var container:TitleContainerBase = getContainer();
				if (container)
				{
					var tw:Number = container.titleBarDisplay.getPreferredBoundsWidth();
					var th:Number = container.titleBarDisplay.getPreferredBoundsHeight();
					
					switch (container.titleBarPlacement)
					{
						case BarPlacement.TOP:
							setBorderRadii(cr, cr, 0, 0);
							background.top = th;
							break;
						case BarPlacement.BOTTOM:
							setBorderRadii(0, 0, cr, cr);
							background.bottom = th;
							break;
						case BarPlacement.LEFT:
							setBorderRadii(cr, 0, 0, cr);
							background.left = tw
							break;
						case BarPlacement.RIGHT:
							setBorderRadii(0, cr, cr, 0);
							background.right = tw;
							break;							
					}
				}
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			private function getContainer():TitleContainerBase
			{
				if (!hostComponent.owner)
					return null;
				
				return Object(hostComponent.owner).hostComponent as TitleContainerBase;
			}
			
			private function setBorderRadii(tl:Number, tr:Number, 
											br:Number, bl:Number):void
			{
				border.topLeftRadiusX = tl;
				border.topRightRadiusX = tr;
				border.bottomRightRadiusX = br;
				border.bottomLeftRadiusX = bl;
				
				background.topLeftRadiusX = tl;
				background.topRightRadiusX = tr;
				background.bottomRightRadiusX = br;
				background.bottomLeftRadiusX = bl;
				
				if (dropShadow)
				{
					dropShadow.tlRadius = tl + 1;
					dropShadow.trRadius = tr + 1;
					dropShadow.blRadius = bl + 1;
					dropShadow.brRadius = br + 1;
				}
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<tg:states>
		<s:State name="normal"/>
		<s:State name="disabled"/>
	</tg:states>
	
	<!--- The Rect border element. -->
	<s:Rect id="border" 
			top="0" right="0" left="0" bottom="0">
	</s:Rect>
	
	<!--- The Rect background element. -->
	<s:Rect id="background"
			top="1" right="1" left="1" bottom="1">
	</s:Rect>
	
</tg:ComponentBorderSkinBase>
